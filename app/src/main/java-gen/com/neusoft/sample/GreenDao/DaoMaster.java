package com.neusoft.sample.GreenDao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.neusoft.sample.GreenDao.UserDao;
import com.neusoft.sample.GreenDao.TextOneStructureDao;
import com.neusoft.sample.GreenDao.TextTwoStructureDao;
import com.neusoft.sample.GreenDao.StudyGoodTermDao;
import com.neusoft.sample.GreenDao.StudyGoodInfoDao;
import com.neusoft.sample.GreenDao.StudyGoodItemDao;
import com.neusoft.sample.GreenDao.CalculationTestDao;
import com.neusoft.sample.GreenDao.XTCSGJDao;
import com.neusoft.sample.GreenDao.XTCSJGDao;
import com.neusoft.sample.GreenDao.XTCTJLDao;
import com.neusoft.sample.GreenDao.XTDCTMDao;
import com.neusoft.sample.GreenDao.UserDoSubjectInfoDao;
import com.neusoft.sample.GreenDao.RanklistDao;
import com.neusoft.sample.GreenDao.ErrorSubjectNubDao;
import com.neusoft.sample.GreenDao.NotificationDao;
import com.neusoft.sample.GreenDao.teacherDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 2): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 2;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        UserDao.createTable(db, ifNotExists);
        TextOneStructureDao.createTable(db, ifNotExists);
        TextTwoStructureDao.createTable(db, ifNotExists);
        StudyGoodTermDao.createTable(db, ifNotExists);
        StudyGoodInfoDao.createTable(db, ifNotExists);
        StudyGoodItemDao.createTable(db, ifNotExists);
        CalculationTestDao.createTable(db, ifNotExists);
        XTCSGJDao.createTable(db, ifNotExists);
        XTCSJGDao.createTable(db, ifNotExists);
        XTCTJLDao.createTable(db, ifNotExists);
        XTDCTMDao.createTable(db, ifNotExists);
        UserDoSubjectInfoDao.createTable(db, ifNotExists);
        RanklistDao.createTable(db, ifNotExists);
        ErrorSubjectNubDao.createTable(db, ifNotExists);
        NotificationDao.createTable(db, ifNotExists);
        teacherDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        UserDao.dropTable(db, ifExists);
        TextOneStructureDao.dropTable(db, ifExists);
        TextTwoStructureDao.dropTable(db, ifExists);
        StudyGoodTermDao.dropTable(db, ifExists);
        StudyGoodInfoDao.dropTable(db, ifExists);
        StudyGoodItemDao.dropTable(db, ifExists);
        CalculationTestDao.dropTable(db, ifExists);
        XTCSGJDao.dropTable(db, ifExists);
        XTCSJGDao.dropTable(db, ifExists);
        XTCTJLDao.dropTable(db, ifExists);
        XTDCTMDao.dropTable(db, ifExists);
        UserDoSubjectInfoDao.dropTable(db, ifExists);
        RanklistDao.dropTable(db, ifExists);
        ErrorSubjectNubDao.dropTable(db, ifExists);
        NotificationDao.dropTable(db, ifExists);
        teacherDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(UserDao.class);
        registerDaoClass(TextOneStructureDao.class);
        registerDaoClass(TextTwoStructureDao.class);
        registerDaoClass(StudyGoodTermDao.class);
        registerDaoClass(StudyGoodInfoDao.class);
        registerDaoClass(StudyGoodItemDao.class);
        registerDaoClass(CalculationTestDao.class);
        registerDaoClass(XTCSGJDao.class);
        registerDaoClass(XTCSJGDao.class);
        registerDaoClass(XTCTJLDao.class);
        registerDaoClass(XTDCTMDao.class);
        registerDaoClass(UserDoSubjectInfoDao.class);
        registerDaoClass(RanklistDao.class);
        registerDaoClass(ErrorSubjectNubDao.class);
        registerDaoClass(NotificationDao.class);
        registerDaoClass(teacherDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
